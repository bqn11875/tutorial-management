{"version":3,"sources":["http-common.ts","services/TutorialService.ts","components/AddTutorial.tsx","components/Tutorial.tsx","components/TutorialsList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","create","baseURL","headers","getAll","a","http","get","response","data","id","post","update","put","remove","delete","removeAll","findByTitle","title","TutorialService","AddTutorial","initialTutorialState","description","published","useState","tutorial","setTutorial","submitted","setSubmitted","handleInputChange","event","target","name","value","className","onClick","htmlFor","type","required","onChange","TutorialDataService","then","console","log","catch","e","Tutorial","props","currentTutorial","setCurrentTutorial","message","setMessage","useEffect","match","params","updatePublished","status","history","push","TutorialsList","tutorials","setTutorials","currentIndex","setCurrentIndex","searchTitle","setSearchTitle","retrieveTutorials","placeholder","length","map","index","setActiveTutorial","to","App","href","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f70a0fae.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:56528/api/v1\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\nimport ITutorialData from \"../types/Tutorial\";\r\n\r\nconst getAll = async () => {\r\n  const response = await http.get(\"/tutorial\");\r\n  return response.data;\r\n};\r\n\r\nconst get = async (id: any) => {\r\n  const response = await http.get(`/tutorial/${id}`);\r\n  return response.data;\r\n};\r\n\r\nconst create = async (data: ITutorialData) => {\r\n  const response = await http.post(\"/tutorial\", data);\r\n  return response.data;\r\n};\r\n\r\nconst update = async (data: ITutorialData) => {\r\n  const response = await http.put(`/tutorial`, data);\r\n  return response.data;\r\n};\r\n\r\nconst remove = async (id: any) => {\r\n  const response = await http.delete(`/tutorial/${id}`);\r\n  return response.data;\r\n};\r\n\r\nconst removeAll = async () => {\r\n  const response = await http.delete(`/tutorial/all`);\r\n  return response.data;\r\n};\r\n\r\nconst findByTitle = async (title: string) => {\r\n  const response = await http.get(`/tutorial/find/${title}`);\r\n  return response.data;\r\n};\r\n\r\nconst TutorialService = {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n  removeAll,\r\n  findByTitle,\r\n};\r\n\r\nexport default TutorialService;","import React, { useState, ChangeEvent } from \"react\";\r\nimport TutorialDataService from \"../services/TutorialService\";\r\nimport ITutorialData from '../types/Tutorial';\r\n\r\nconst AddTutorial: React.FC = () => {\r\n  const initialTutorialState = {\r\n    id: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    published: false\r\n  };\r\n  const [tutorial, setTutorial] = useState<ITutorialData>(initialTutorialState);\r\n  const [submitted, setSubmitted] = useState<boolean>(false);\r\n\r\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setTutorial({ ...tutorial, [name]: value });\r\n  };\r\n\r\n  const saveTutorial = () => {\r\n    var data = {\r\n      title: tutorial.title,\r\n      description: tutorial.description\r\n    };\r\n\r\n    TutorialDataService.create(data)\r\n      .then(response => {\r\n        // setTutorial({\r\n        //   id: response.data.id,\r\n        //   title: response.data.title,\r\n        //   description: response.data.description,\r\n        //   published: response.data.published\r\n        // });\r\n        setSubmitted(true);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const newTutorial = () => {\r\n    setTutorial(initialTutorialState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"submit-form\">\r\n      {submitted ? (\r\n        <div>\r\n          <h4>You submitted successfully!</h4>\r\n          <button className=\"btn btn-success\" onClick={newTutorial}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              required\r\n              value={tutorial.title}\r\n              onChange={handleInputChange}\r\n              name=\"title\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"description\">Description</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              required\r\n              value={tutorial.description}\r\n              onChange={handleInputChange}\r\n              name=\"description\"\r\n            />\r\n          </div>\r\n\r\n          <button onClick={saveTutorial} className=\"btn btn-success\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTutorial; // coding here - prepare jump to \"List of Objects Component\"","import React, { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport TutorialDataService from \"../services/TutorialService\";\r\nimport ITutorialData from \"../types/Tutorial\";\r\n\r\ninterface RouterProps { // type for `match.params`\r\n  id: string; // must be type `string` since value comes from the URL\r\n}\r\n\r\ntype Props = RouteComponentProps<RouterProps>;\r\n\r\nconst Tutorial: React.FC<Props> = (props: Props) => {\r\n  const initialTutorialState = {\r\n    id: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    published: false\r\n  };\r\n  const [currentTutorial, setCurrentTutorial] = useState<ITutorialData>(initialTutorialState);\r\n  const [message, setMessage] = useState<string>(\"\");\r\n\r\n  const getTutorial = (id: string) => {\r\n    TutorialDataService.get(id)\r\n      .then(response => {\r\n        setCurrentTutorial(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTutorial(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setCurrentTutorial({ ...currentTutorial, [name]: value });\r\n  };\r\n\r\n  const updatePublished = (status: boolean) => {\r\n    var data = {\r\n      id: currentTutorial.id,\r\n      title: currentTutorial.title,\r\n      description: currentTutorial.description,\r\n      published: status\r\n    };\r\n\r\n    TutorialDataService.update(data)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setCurrentTutorial({ ...currentTutorial, published: status });\r\n        setMessage(\"The status was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateTutorial = () => {\r\n    TutorialDataService.update(currentTutorial)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The tutorial was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteTutorial = () => {\r\n    TutorialDataService.remove(currentTutorial.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        props.history.push(\"/tutorials\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentTutorial ? (\r\n        <div className=\"edit-form\">\r\n          <h4>Tutorial</h4>\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={currentTutorial.title}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={currentTutorial.description}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>\r\n                <strong>Status:</strong>\r\n              </label>\r\n              {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n            </div>\r\n          </form>\r\n\r\n          {currentTutorial.published ? (\r\n            <button\r\n              className=\"badge bg-primary me-2\"\r\n              onClick={() => updatePublished(false)}\r\n            >\r\n              UnPublish\r\n            </button>\r\n          ) : (\r\n            <button\r\n              className=\"badge bg-primary me-2\"\r\n              onClick={() => updatePublished(true)}\r\n            >\r\n              Publish\r\n            </button>\r\n          )}\r\n\r\n          <button className=\"badge bg-danger me-2\" onClick={deleteTutorial}>\r\n            Delete\r\n          </button>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"badge bg-success\"\r\n            onClick={updateTutorial}\r\n          >\r\n            Update\r\n          </button>\r\n          <p>{message}</p>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Tutorial...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tutorial;","import React, { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TutorialDataService from \"../services/TutorialService\";\r\nimport ITutorialData from '../types/Tutorial';\r\n\r\nconst TutorialsList: React.FC = () => {\r\n  const [tutorials, setTutorials] = useState<ITutorialData[]>([]);\r\n  const [currentTutorial, setCurrentTutorial] = useState<ITutorialData | null>(null);\r\n  const [currentIndex, setCurrentIndex] = useState<number>(-1);\r\n  const [searchTitle, setSearchTitle] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveTutorials();\r\n  }, []);\r\n\r\n  const onChangeSearchTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const searchTitle = e.target.value;\r\n    setSearchTitle(searchTitle);\r\n  };\r\n\r\n  const retrieveTutorials = () => {\r\n    TutorialDataService.getAll()\r\n      .then(response => {\r\n        setTutorials(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveTutorials();\r\n    setCurrentTutorial(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveTutorial = (tutorial: ITutorialData, index: number) => {\r\n    setCurrentTutorial(tutorial);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  const removeAllTutorials = () => {\r\n    TutorialDataService.removeAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const findByTitle = () => {\r\n    TutorialDataService.findByTitle(searchTitle)\r\n      .then(response => {\r\n        setTutorials(response.data);\r\n        setCurrentTutorial(null);\r\n        setCurrentIndex(-1);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"list row\">\r\n      <div className=\"col-md-8\">\r\n        <div className=\"input-group mb-3\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search by title\"\r\n            value={searchTitle}\r\n            onChange={onChangeSearchTitle}\r\n          />\r\n          <div className=\"input-group-append\">\r\n            <button\r\n              className=\"btn btn-outline-secondary\"\r\n              type=\"button\"\r\n              onClick={findByTitle}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        <h4>Tutorials List</h4>\r\n\r\n        <ul className=\"list-group\">\r\n          {tutorials?.length > 0 &&\r\n            tutorials.map((tutorial, index) => (\r\n              <li\r\n                className={\r\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                }\r\n                onClick={() => setActiveTutorial(tutorial, index)}\r\n                key={index}\r\n              >\r\n                {tutorial.title}\r\n              </li>\r\n            ))}\r\n        </ul>\r\n\r\n        <button\r\n          className=\"m-3 btn btn-sm btn-danger\"\r\n          onClick={removeAllTutorials}\r\n        >\r\n          Remove All\r\n        </button>\r\n      </div>\r\n      <div className=\"col-md-6\">\r\n        {currentTutorial ? (\r\n          <div className=\"form-container\">\r\n            <h4>Tutorial</h4>\r\n            <div>\r\n              <label>\r\n                <strong>Title:</strong>\r\n              </label>{\" \"}\r\n              {currentTutorial.title}\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <strong>Description:</strong>\r\n              </label>{\" \"}\r\n              {currentTutorial.description}\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <strong>Status:</strong>\r\n              </label>{\" \"}\r\n              {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n            </div>\r\n\r\n            <Link\r\n              to={\"/tutorials/\" + currentTutorial.id}\r\n              className=\"badge bg-warning text-dark\"\r\n            >\r\n              Edit\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Tutorial...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TutorialsList;","import React from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddTutorial from \"./components/AddTutorial\";\nimport Tutorial from \"./components/Tutorial\";\nimport TutorialsList from \"./components/TutorialsList\";\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/tutorials\" className=\"navbar-brand\">\n          TUTsample\n        </a>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/tutorials\"} className=\"nav-link\">\n              Tutorials\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/add\"} className=\"nav-link\">\n              Add\n            </Link>\n          </li>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n          <Route exact path=\"/add\" component={AddTutorial} />\n          <Route path=\"/tutorials/:id\" component={Tutorial} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}